
/**************************************************************************/

DROP DATABASE IF EXISTS gameDB;

CREATE DATABASE gameDB;

USE gameDB;

/**************************************************************************/

GRANT USAGE ON gameDB.* TO SISDB;
DROP USER SISDB;

GRANT USAGE ON gameDB.* TO PROCDB;
DROP USER PROCDB;

GRANT USAGE ON gameDB.* TO APPDB;
DROP USER APPDB;

CREATE USER SISDB IDENTIFIED BY 'SISDB';

CREATE USER PROCDB IDENTIFIED BY 'PROCDB';

CREATE USER APPDB IDENTIFIED BY 'APPDB';

/**************************************************************************/

DROP TABLE IF EXISTS gameDB.PROPERTY;
DROP TABLE IF EXISTS gameDB.GAME_EVENT;
DROP TABLE IF EXISTS gameDB.ITEM;
DROP TABLE IF EXISTS gameDB.PLAYER_RECIPE;
DROP TABLE IF EXISTS gameDB.PLAYER_SKILL;
DROP TABLE IF EXISTS gameDB.PLAYER;
DROP TABLE IF EXISTS gameDB.RECIPE;
DROP TABLE IF EXISTS gameDB.ITEM_TYPE_HIERARCHY;
DROP TABLE IF EXISTS gameDB.ITEM_TYPE;
DROP TABLE IF EXISTS gameDB.SKILL;

CREATE TABLE gameDB.SKILL (
    ID_SKILL            INT UNSIGNED NOT NULL AUTO_INCREMENT,
    ID_PARENT_SKILL     INT UNSIGNED,
    FL_DIFFICULTY       DOUBLE NOT NULL,
    ST_NAME             VARCHAR(250) NOT NULL,
    PRIMARY KEY(ID_SKILL)
) ENGINE=InnoDB;

CREATE TABLE gameDB.ITEM_TYPE (
    ID_ITEM_TYPE        INT UNSIGNED NOT NULL AUTO_INCREMENT,
    ST_NAME             VARCHAR(32) NOT NULL,
    PRIMARY KEY(ID_ITEM_TYPE)
) ENGINE=InnoDB;

CREATE TABLE gameDB.ITEM_TYPE_HIERARCHY (
    ID_ITEM_TYPE_PARENT INT UNSIGNED NOT NULL,
    ID_ITEM_TYPE_CHILD  INT UNSIGNED NOT NULL,
    PRIMARY KEY(ID_ITEM_TYPE_PARENT, ID_ITEM_TYPE_CHILD),
    FOREIGN KEY (ID_ITEM_TYPE_PARENT) REFERENCES gameDB.ITEM_TYPE(ID_ITEM_TYPE),
    FOREIGN KEY (ID_ITEM_TYPE_CHILD) REFERENCES gameDB.ITEM_TYPE(ID_ITEM_TYPE)
) ENGINE=InnoDB;

CREATE UNIQUE INDEX ITEM_TYPE_HIERARCHY_I1 ON gameDB.ITEM_TYPE_HIERARCHY
    (ID_ITEM_TYPE_CHILD, ID_ITEM_TYPE_PARENT);

CREATE TABLE gameDB.RECIPE (
    ID_RECIPE           INT UNSIGNED NOT NULL AUTO_INCREMENT,
    ID_SKILL            INT UNSIGNED NOT NULL,
    ID_ITEM_TYPE        INT UNSIGNED NOT NULL,
    ST_NAME             VARCHAR(32) NOT NULL,
    PRIMARY KEY(ID_RECIPE),
    FOREIGN KEY (ID_SKILL) REFERENCES gameDB.SKILL(ID_SKILL),
    FOREIGN KEY (ID_ITEM_TYPE) REFERENCES gameDB.ITEM_TYPE(ID_ITEM_TYPE)
) ENGINE=InnoDB;

CREATE TABLE gameDB.PLAYER (
    ID_PLAYER           INT UNSIGNED NOT NULL AUTO_INCREMENT,
    ST_NAME             VARCHAR(32) NOT NULL,
    NB_MAX_ENERGY       INT NOT NULL,
    NB_ENERGY           INT NOT NULL,
    NB_MONEY            BIGINT NOT NULL,
    TS_CREATED          TIMESTAMP NOT NULL DEFAULT NOW(),
    ID_MODIFIED_BY      INT UNSIGNED NOT NULL,
    TS_MODIFIED_AT      TIMESTAMP NOT NULL,
    PRIMARY KEY(ID_PLAYER)
) ENGINE=InnoDB
PARTITION BY RANGE( ID_PLAYER ) (
    PARTITION p0 VALUES LESS THAN (1000),
    PARTITION p1 VALUES LESS THAN (2000),
    PARTITION p2 VALUES LESS THAN (3000),
    PARTITION p3 VALUES LESS THAN (4000),
    PARTITION pmax VALUES LESS THAN MAXVALUE
);

CREATE TABLE gameDB.PLAYER_SKILL (
    ID_PLAYER           INT UNSIGNED NOT NULL,
    ID_SKILL            INT UNSIGNED NOT NULL,
    FL_RATING           DOUBLE NOT NULL,
    TS_CREATED          TIMESTAMP NOT NULL DEFAULT NOW(),
    ID_MODIFIED_BY      INT UNSIGNED NOT NULL,
    TS_MODIFIED_AT      TIMESTAMP NOT NULL,
    PRIMARY KEY(ID_PLAYER, ID_SKILL)
) ENGINE=InnoDB
PARTITION BY RANGE( ID_PLAYER ) (
    PARTITION p0 VALUES LESS THAN (10000),
    PARTITION p1 VALUES LESS THAN (20000),
    PARTITION p2 VALUES LESS THAN (30000),
    PARTITION p3 VALUES LESS THAN (40000),
    PARTITION pmax VALUES LESS THAN MAXVALUE
);

CREATE TABLE gameDB.PLAYER_RECIPE (
    ID_PLAYER           INT UNSIGNED NOT NULL,
    ID_RECIPE           INT UNSIGNED NOT NULL,
    TS_CREATED          TIMESTAMP NOT NULL DEFAULT NOW(),
    ID_MODIFIED_BY      INT UNSIGNED NOT NULL,
    TS_MODIFIED_AT      TIMESTAMP NOT NULL,
    PRIMARY KEY(ID_PLAYER, ID_RECIPE)
) ENGINE=InnoDB
PARTITION BY RANGE( ID_PLAYER ) (
    PARTITION p0 VALUES LESS THAN (10000),
    PARTITION p1 VALUES LESS THAN (20000),
    PARTITION p2 VALUES LESS THAN (30000),
    PARTITION p3 VALUES LESS THAN (40000),
    PARTITION pmax VALUES LESS THAN MAXVALUE
);

CREATE TABLE gameDB.ITEM (
    ID_ITEM             INT UNSIGNED NOT NULL AUTO_INCREMENT,
    ID_PLAYER           INT UNSIGNED NOT NULL,
    ID_ITEM_TYPE        INT UNSIGNED NOT NULL,
    ST_NAME             VARCHAR(32) NOT NULL,
    NB_QUANTITY         BIGINT UNSIGNED NOT NULL,
    FL_VALUE            DOUBLE NOT NULL,
    TS_CREATED          TIMESTAMP NOT NULL DEFAULT NOW(),
    ID_MODIFIED_BY      INT UNSIGNED NOT NULL,
    TS_MODIFIED_AT      TIMESTAMP NOT NULL,
    PRIMARY KEY(ID_ITEM)
) ENGINE=InnoDB
PARTITION BY RANGE( ID_ITEM ) (
    PARTITION p0 VALUES LESS THAN (100000),
    PARTITION p1 VALUES LESS THAN (200000),
    PARTITION p2 VALUES LESS THAN (300000),
    PARTITION p3 VALUES LESS THAN (400000),
    PARTITION pmax VALUES LESS THAN MAXVALUE
);

CREATE TABLE gameDB.GAME_EVENT (
    ID_EVENT            INT UNSIGNED NOT NULL AUTO_INCREMENT,
    ID_PLAYER           INT UNSIGNED NOT NULL,
    DT_DATE             DATETIME NOT NULL,
    ST_MESSAGE          VARCHAR(32) NOT NULL,
    BL_IS_NEW           BOOLEAN NOT NULL,
    TS_CREATED          TIMESTAMP NOT NULL DEFAULT NOW(),
    ID_MODIFIED_BY      INT UNSIGNED NOT NULL,
    TS_MODIFIED_AT      TIMESTAMP NOT NULL,
    PRIMARY KEY(ID_EVENT)
) ENGINE=InnoDB
PARTITION BY RANGE( ID_EVENT ) (
    PARTITION p0 VALUES LESS THAN (100000),
    PARTITION p1 VALUES LESS THAN (200000),
    PARTITION p2 VALUES LESS THAN (300000),
    PARTITION p3 VALUES LESS THAN (400000),
    PARTITION pmax VALUES LESS THAN MAXVALUE
);

CREATE UNIQUE INDEX GAME_EVENT_I1 ON gameDB.GAME_EVENT
    (ID_PLAYER, DT_DATE, ID_EVENT);

CREATE TABLE gameDB.PROPERTY (
    ID_PROPERTY         INT UNSIGNED NOT NULL AUTO_INCREMENT,
    ID_OWNER            INT UNSIGNED NOT NULL,
    /*****
     * ID_ONWER_TYPE:
     * 0-> ItemType
     * 1-> Recipe
     * 2-> User
     * 3-> Item
     */
    ID_OWNER_TYPE       TINYINT NOT NULL,
    /*****
     * ID_PROPERTY_TYPE:
     * 0-> Integer
     * 1-> Float
     * 2-> String
     * 3-> Date
     */
    ID_PROPERTY_TYPE    TINYINT NOT NULL,
    NB_VALUE            BIGINT,
    FL_VALUE            DOUBLE,
    DT_VALUE            DATETIME,
    ST_VALUE            VARCHAR(250),
    ST_NAME             VARCHAR(250) NOT NULL,
    PRIMARY KEY(ID_PROPERTY)
) ENGINE=InnoDB
PARTITION BY RANGE( ID_PROPERTY ) (
    PARTITION p0 VALUES LESS THAN (1000000),
    PARTITION p1 VALUES LESS THAN (2000000),
    PARTITION p2 VALUES LESS THAN (3000000),
    PARTITION p3 VALUES LESS THAN (4000000),
    PARTITION pmax VALUES LESS THAN MAXVALUE
);

CREATE UNIQUE INDEX PROPERTY_I1 ON gameDB.PROPERTY
    (ID_OWNER, ID_OWNER_TYPE, ST_NAME, ID_PROPERTY);

/**************************************************************************/

GRANT USAGE, CREATE, INDEX ON gameDB TO SISDB;

GRANT USAGE, CREATE ROUTINE ON gameDB.* TO PROCDB;

GRANT USAGE ON gameDB.* TO APPDB;

GRANT SELECT, INSERT, UPDATE, DELETE ON gameDB.SKILL TO SISDB;
GRANT SELECT, INSERT, UPDATE, DELETE ON gameDB.ITEM_TYPE TO SISDB;
GRANT SELECT, INSERT, UPDATE, DELETE ON gameDB.ITEM_TYPE_HIERARCHY TO SISDB;
GRANT SELECT, INSERT, UPDATE, DELETE ON gameDB.RECIPE TO SISDB;
GRANT SELECT, INSERT, UPDATE, DELETE ON gameDB.PLAYER TO SISDB;
GRANT SELECT, INSERT, UPDATE, DELETE ON gameDB.PLAYER_SKILL TO SISDB;
GRANT SELECT, INSERT, UPDATE, DELETE ON gameDB.PLAYER_RECIPE TO SISDB;
GRANT SELECT, INSERT, UPDATE, DELETE ON gameDB.ITEM TO SISDB;
GRANT SELECT, INSERT, UPDATE, DELETE ON gameDB.GAME_EVENT TO SISDB;
GRANT SELECT, INSERT, UPDATE, DELETE ON gameDB.PROPERTY TO SISDB;

GRANT SELECT ON gameDB.SKILL TO PROCDB;
GRANT SELECT ON gameDB.ITEM_TYPE TO PROCDB;
GRANT SELECT ON gameDB.ITEM_TYPE_HIERARCHY TO PROCDB;
GRANT SELECT ON gameDB.RECIPE TO PROCDB;
GRANT SELECT, INSERT, UPDATE, DELETE ON gameDB.PLAYER TO PROCDB;
GRANT SELECT, INSERT, UPDATE, DELETE ON gameDB.PLAYER_SKILL TO PROCDB;
GRANT SELECT, INSERT, UPDATE, DELETE ON gameDB.PLAYER_RECIPE TO PROCDB;
GRANT SELECT, INSERT, UPDATE, DELETE ON gameDB.ITEM TO PROCDB;
GRANT SELECT, INSERT, UPDATE, DELETE ON gameDB.GAME_EVENT TO PROCDB;
GRANT SELECT, INSERT, UPDATE, DELETE ON gameDB.PROPERTY TO PROCDB;

/**************************************************************************/
